name: Build and Deploy OCI Image

on:
  push:
    branches:
      - main
    paths:
      - 'newrelic-metrics-function/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'newrelic-metrics-function/**'

jobs:
  # Job 1: Build Docker Image on PR Raise
  build_docker_image:
    runs-on: ubuntu-latest
    environment:
      name: build-test-env
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set permissions for build script
        run: chmod +x script/build_and_push.sh

      - name: Build Docker Image
        run: ./script/build_and_push.sh build-only ${{ env.DEFAULT_BUILD_REGION }}
        env:
          DEFAULT_BUILD_REGION: ap-hyderabad-1
          OCI_AUTH_TOKEN: ${{ secrets.OCI_AUTH_TOKEN }}
          OCI_TENANCY_NAMESPACE: ${{ secrets.OCI_TENANCY_NAMESPACE }}
          OCI_USERNAME: ${{ secrets.OCI_USERNAME }}

  # Job 2: Push Docker Image on PR Merge
  push_docker_image:
    runs-on: ubuntu-latest
    needs: build_docker_image
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    strategy:
      matrix:
        region:
          - us-phoenix-1
          - ap-hyderabad-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set permissions for build script
        run: chmod +x script/build_and_push.sh

      - name: Push Docker Image to ${{ matrix.region }}
        run: ./script/build_and_push.sh full ${{ matrix.region }}
        env:
          OCI_AUTH_TOKEN: ${{ secrets.OCI_AUTH_TOKEN }}
          OCI_REGION: ${{ matrix.region }}
          OCI_TENANCY_NAME: ${{ secrets.TENANCY_NAME }}
          OCI_USERNAME: ${{ secrets.OCI_USERNAME }}
